<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Dao.MovieMapper" >
  <resultMap id="BaseResultMap" type="Entity.Movie" >
    <id column="movieId" property="movieid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="leading_creator" property="leadingCreator" jdbcType="VARCHAR" />
    <result column="cover" property="cover" jdbcType="VARCHAR" />
    <result column="stills" property="stills" jdbcType="VARCHAR" />
    <result column="release_date" property="releaseDate" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="REAL" />
    <result column="gradeNum" property="gradenum" jdbcType="INTEGER" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    movieId, name, leading_creator, cover, stills, release_date, time, grade, gradeNum, 
    introduction
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="Entity.MovieExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from movie
    where movieId = #{movieid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from movie
    where movieId = #{movieid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="Entity.MovieExample" >
    delete from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="Entity.Movie" >
    insert into movie (movieId, name, leading_creator, 
      cover, stills, release_date, 
      time, grade, gradeNum, 
      introduction)
    values (#{movieid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{leadingCreator,jdbcType=VARCHAR}, 
      #{cover,jdbcType=VARCHAR}, #{stills,jdbcType=VARCHAR}, #{releaseDate,jdbcType=VARCHAR}, 
      #{time,jdbcType=VARCHAR}, #{grade,jdbcType=REAL}, #{gradenum,jdbcType=INTEGER}, 
      #{introduction,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="Entity.Movie" >
    insert into movie
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="movieid != null" >
        movieId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="leadingCreator != null" >
        leading_creator,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="stills != null" >
        stills,
      </if>
      <if test="releaseDate != null" >
        release_date,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="gradenum != null" >
        gradeNum,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="movieid != null" >
        #{movieid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="leadingCreator != null" >
        #{leadingCreator,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="stills != null" >
        #{stills,jdbcType=VARCHAR},
      </if>
      <if test="releaseDate != null" >
        #{releaseDate,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=REAL},
      </if>
      <if test="gradenum != null" >
        #{gradenum,jdbcType=INTEGER},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="Entity.MovieExample" resultType="java.lang.Integer" >
    select count(*) from movie
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update movie
    <set >
      <if test="record.movieid != null" >
        movieId = #{record.movieid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.leadingCreator != null" >
        leading_creator = #{record.leadingCreator,jdbcType=VARCHAR},
      </if>
      <if test="record.cover != null" >
        cover = #{record.cover,jdbcType=VARCHAR},
      </if>
      <if test="record.stills != null" >
        stills = #{record.stills,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseDate != null" >
        release_date = #{record.releaseDate,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=REAL},
      </if>
      <if test="record.gradenum != null" >
        gradeNum = #{record.gradenum,jdbcType=INTEGER},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update movie
    set movieId = #{record.movieid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      leading_creator = #{record.leadingCreator,jdbcType=VARCHAR},
      cover = #{record.cover,jdbcType=VARCHAR},
      stills = #{record.stills,jdbcType=VARCHAR},
      release_date = #{record.releaseDate,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=REAL},
      gradeNum = #{record.gradenum,jdbcType=INTEGER},
      introduction = #{record.introduction,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="Entity.Movie" >
    update movie
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="leadingCreator != null" >
        leading_creator = #{leadingCreator,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="stills != null" >
        stills = #{stills,jdbcType=VARCHAR},
      </if>
      <if test="releaseDate != null" >
        release_date = #{releaseDate,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=REAL},
      </if>
      <if test="gradenum != null" >
        gradeNum = #{gradenum,jdbcType=INTEGER},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
    </set>
    where movieId = #{movieid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="Entity.Movie" >
    update movie
    set name = #{name,jdbcType=VARCHAR},
      leading_creator = #{leadingCreator,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      stills = #{stills,jdbcType=VARCHAR},
      release_date = #{releaseDate,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=REAL},
      gradeNum = #{gradenum,jdbcType=INTEGER},
      introduction = #{introduction,jdbcType=VARCHAR}
    where movieId = #{movieid,jdbcType=VARCHAR}
  </update>
</mapper>